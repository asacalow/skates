= babylon

== DESCRIPTION:

Babylon is a framework to EventMachine based XMPP External Components in Ruby.

== FEATURES/PROBLEMS:

* This hasn't been tested. 

== ROADMAP :

- Instead of passing the stanzas as Nokogiri:XML:Node elements we should find a way to pass an "agnostic" datastructure, so that app developers don't have to learn/know/understand Nokogiri
- Adding the ability to send several messages all at once (like render :collection in Rails)

== SYNOPSIS:

1. Install the gem
2. The app contains a generator that will "build" a scaffold for your application. 
    
    $> babylon myapp

3. Write your own "controllers"

/app/controllers/message_controller.rb 

    class MessageController < Babylon::Base::Controller  
      # Each controller is initiated with the stanza.(similar to params in rails actions)

      def echo
        # We do stuff here
        @to = @stanza.attributes["from"].text
        @from = @stanza.attributes["from"].text
        @response = @stanza.elements["//body"].text
        # By default, this would "render" the echo.xml.builder
      end
    end

4. Add the corresponding views (used to generate the messages). Babylon uses the same file conventions as Rails : a subdirectory for each controller, and one file per action :
Compared to Rails, we are using accessors (and not @variables assigned in the controller). 

/app/views/message/echo.xml.builder 

    self.message(:to => to, :from => from, :type => :chat) do
        self.body(response)
    end

5. And finally start the component :
    
    script/component

== ADDITIONAL INFORMATION

This code hasn't been tested at all! It's just a proof of concept. Feel free to pull, branch, improve {code|specs|tests|docs} and we will merge it!

== REQUIREMENTS:

Our goal is to limit the number of dependencies. Nokogiri seems to be only XML Library on Ruby that has a Push SAX Parser, that is why we are using it. It also seems pretty 'fast'.
Gems : Eventmachine, nokogiri

== INSTALL:

- sudo gem install babylon

== LICENSE:

(The MIT License)

Copyright (c) 2009 Julien Genestoux http://notifixio.us

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.